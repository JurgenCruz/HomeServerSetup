services:
  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    environment:
      - PUID=XXX
      - PGID=XXX
      - TZ=America/New_York
    networks:
      - arr
      - nginx
    security_opt:
      - label:type:arr.process
    volumes:
      - /Apps/radarr:/config:Z
      - /mnt/Tank/MediaCenter:/MediaCenter
    ports:
      - 7878:7878
    restart: always
  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    environment:
      - PUID=XXX
      - PGID=XXX
      - TZ=America/New_York
    networks:
      - arr
      - nginx
    security_opt:
      - label:type:arr.process
    volumes:
      - /Apps/sonarr:/config:Z
      - /mnt/Tank/MediaCenter:/MediaCenter
    ports:
      - 8989:8989
    restart: always
  prowlarr:
    image: lscr.io/linuxserver/prowlarr:latest
    container_name: prowlarr
    environment:
      - PUID=XXX
      - PGID=XXX
      - TZ=America/New_York
    networks:
      - arr
      - nginx
    volumes:
      - /Apps/prowlarr:/config:Z
    ports:
      - 9696:9696
    restart: always
  flaresolverr:
    image: ghcr.io/flaresolverr/flaresolverr:latest
    container_name: flaresolverr
    environment:
      - LOG_LEVEL=info
      - LOG_HTML=false
      - CAPTCHA_SOLVER=none
      - TZ=America/New_York
    networks:
      - arr
    ports:
      - 8191:8191
    restart: always
  bazarr:
    image: lscr.io/linuxserver/bazarr:latest
    container_name: bazarr
    environment:
      - PUID=XXX
      - PGID=XXX
      - TZ=America/New_York
    networks:
      - arr
      - nginx
    security_opt:
      - label:type:arr.process
    volumes:
      - /Apps/bazarr:/config:Z
      - /mnt/Tank/MediaCenter:/MediaCenter
    ports:
      - 6767:6767
    restart: always
  jellyfin:
    image: jellyfin/jellyfin
    container_name: jellyfin
    environment:
      - TZ=America/New_York
    networks:
      - arr
      - nginx
    security_opt:
      - label:type:arr.process
    volumes:
      - /Apps/jellyfin/config:/config:Z
      - /Apps/jellyfin/cache:/cache:Z
      - /mnt/Tank/MediaCenter:/MediaCenter
    ports:
      - 8096:8096
    runtime: nvidia
    deploy:
      resources:
        reservations:
          devices:
            - capabilities: [ gpu ]
    restart: always
  jellyseerr:
    image: fallenbagel/jellyseerr:latest
    container_name: jellyseerr
    environment:
      - LOG_LEVEL=info
      - TZ=America/New_York
    networks:
      - arr
      - nginx
    volumes:
      - /Apps/jellyseerr:/app/config:Z
    ports:
      - 5055:5055
    restart: always
  qbittorrent:
    image: trigus42/qbittorrentvpn:latest
    container_name: qbittorrent
    environment:
      - VPN_TYPE=wireguard
      - BIND_INTERFACE=yes
      - PUID=XXX
      - PGID=XXX
      - TZ=America/New_York
      - WEBUI_PASSWORD=adminadmin
    networks:
      - arr
      - nginx
    security_opt:
      - label:type:qbittorrent.process
    volumes:
      - /Apps/qbittorrent:/config:Z
      - /dev/null:/downloads
      - /mnt/Tank/MediaCenter:/MediaCenter
    ports:
      - 10095:8080
    cap_add:
      - NET_ADMIN
    sysctls:
      - net.ipv4.conf.all.src_valid_mark=1
      - net.ipv6.conf.all.disable_ipv6=0
    restart: always
  technitium:
    image: technitium/dns-server:latest
    container_name: technitium
    environment:
      - TZ=America/New_York
      - DNS_SERVER_DOMAIN=technitium
      - DNS_SERVER_WEB_SERVICE_ENABLE_HTTPS=true
      - DNS_SERVER_WEB_SERVICE_USE_SELF_SIGNED_CERT=true
      - DNS_SERVER_WEB_SERVICE_HTTP_PORT=80
      - DNS_SERVER_WEB_SERVICE_HTTPS_PORT=443
      - DNS_SERVER_LOG_USING_LOCAL_TIME=true
    networks:
      lanvlan:
        ipv4_address: 192.168.1.10
    volumes:
      - /Apps/technitium/config:/etc/dns:Z
    dns:
      - 127.0.0.1
      - 1.1.1.1
    cap_add:
      - NET_ADMIN
    restart: always
  homeassistant:
    image: ghcr.io/home-assistant/home-assistant:stable
    container_name: homeassistant
    environment:
      - TZ=America/New_York
    networks:
      nginx:
      lanvlan:
        ipv4_address: 192.168.1.11
    privileged: true
    # security_opt:
    #   - label:disable
    volumes:
      - /Apps/homeassistant:/config:Z
      - /etc/localtime:/etc/localtime:ro
      - /run/dbus:/run/dbus:ro
    restart: always
  nginx:
    image: jc21/nginx-proxy-manager:latest
    container_name: nginx
    environment:
      - TZ=America/New_York
    networks:
      - nginx
    volumes:
      - /Apps/nginx/data:/data:Z
      - /Apps/nginx/etc-letsencrypt:/etc/letsencrypt:Z
    ports:
      - 80:80
      - 443:443
      - 8181:81
    restart: always
  wireguard:
    image: lscr.io/linuxserver/wireguard:latest
    container_name: wireguard
    environment:
      - PUID=XXX
      - PGID=XXX
      - TZ=America/New_York
      - SERVERURL=wg.micasa.duckdns.org
      - PEERS=phone,laptop
      - PEERDNS=10.13.13.1,192.168.1.10
      - ALLOWEDIPS=192.168.1.0/24,10.13.13.0/24
      - PERSISTENTKEEPALIVE_PEERS=all
      - LOG_CONFS=true
    networks:
      - wireguard
    security_opt:
      - label:type:wireguard.process
    volumes:
      - /Apps/wireguard:/config:Z
    ports:
      - 51820:51820/udp
    cap_add:
      - NET_ADMIN
    sysctls:
      - net.ipv4.conf.all.src_valid_mark=1
    restart: always
networks:
  arr:
    driver_opts:
      com.docker.network.bridge.name: br-arr
    ipam:
      config:
        - subnet: 172.21.0.0/24
          ip_range: 172.21.0.0/24
  wireguard:
    driver_opts:
      com.docker.network.bridge.name: br-wg
    ipam:
      config:
        - subnet: 172.21.2.0/24
          ip_range: 172.21.2.0/24
  nginx:
    driver_opts:
      com.docker.network.bridge.name: br-nginx
    ipam:
      config:
        - subnet: 172.21.3.0/24
          ip_range: 172.21.3.0/24
  lanvlan:
    driver: macvlan
    driver_opts:
      parent: eth0
    ipam:
      config:
        - subnet: 192.168.1.0/24
          gateway: 192.168.1.254
          ip_range: 192.168.1.0/27
          aux_addresses:
            host: 192.168.1.12
